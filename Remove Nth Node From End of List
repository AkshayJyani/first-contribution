Given the head of a linked list, remove the nth node from the end of the list and return its head.


Code:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *temp1=head;
        ListNode *temp2=head;
        if(!head){return head;}
        while(n!=0){
            temp1=temp1->next;
            n--;
        }
        while(temp1!=NULL&&temp1->next!=NULL){
            temp2=temp2->next;
            temp1=temp1->next;
        }
        if(temp1==NULL){return head->next;}
        temp2->next=temp2->next->next;
        return head;
    }
};
